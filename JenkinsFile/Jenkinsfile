pipeline {
	agent any
	tools{
		maven 'mvn-3.3.9'
	}
	stages 
	{
		stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
	   stage('Checkout SCM') 
	   {
	   steps {
	   		checkout scm   
	   	}
	   }
	   
	   stage('Static Code Analysis && Build') 
	   {  
		steps {
			withSonarQubeEnv('sonar_7') {
		  		sh "mvn clean install -Dmaven.test.skip=true sonar:sonar"
		  		}
	  		}
       }
		stage("Quality Gate"){
		  timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
		    def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
		    if (qg.status != 'OK') {
		      error "Pipeline aborted due to quality gate failure: ${qg.status}"
		    }
		  }
		}		
	   stage('QA Test') 
	   { 
        steps {
            sh 'mvn test' 
        }   
	      post {
	        always {
	            junit 'target/surefire-reports/*.xml'
	        }
	     }
       }
	}
}