pipeline {
	agent any
	tools{ maven 'mvn-3.3.9' }
	stages {
		stage ('Initialize') { steps { sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                ''' } }
		stage('Checkout SCM') { steps { checkout scm } }

		stage('Code Analysis && Build') {
			steps {
				withSonarQubeEnv('sonarQB') {
					sh "mvn clean install -Dmaven.test.skip=true "
					sh 'sleep 10'
				}
			}
		}
		stage('Build Docker image') {
			/* This builds the actual image; synonymous to
			 * docker build on the command line */
			steps {
				script {

					sh "cp target/*.jar /home/turja/DevOps/SampleApp/dockerfile/"

					dir ("/home/turja/DevOps/SampleApp/dockerfile" ) {

						def app = docker.build("dev-image:${env.BUILD_ID}" )
						//	app.inside { sh 'mvn test' }
					}
				}
			}
		}
		stage ('Run') {
			steps {
			script {
				dapp = docker.image("dev-image:${env.BUILD_ID}").run('-p 8080:8080')
				}
			}
		}
	}
}


